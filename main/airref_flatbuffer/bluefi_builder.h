#ifndef BLUEFI_BUILDER_H
#define BLUEFI_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef BLUEFI_READER_H
#include "bluefi_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __WifiCredentials_required[] = { 0 };
typedef flatbuffers_ref_t WifiCredentials_ref_t;
static WifiCredentials_ref_t WifiCredentials_clone(flatbuffers_builder_t *B, WifiCredentials_table_t t);
__flatbuffers_build_table(flatbuffers_, WifiCredentials, 2)

static const flatbuffers_voffset_t __BluefiCommand_required[] = { 0 };
typedef flatbuffers_ref_t BluefiCommand_ref_t;
static BluefiCommand_ref_t BluefiCommand_clone(flatbuffers_builder_t *B, BluefiCommand_table_t t);
__flatbuffers_build_table(flatbuffers_, BluefiCommand, 2)

static const flatbuffers_voffset_t __BluefiReply_required[] = { 0 };
typedef flatbuffers_ref_t BluefiReply_ref_t;
static BluefiReply_ref_t BluefiReply_clone(flatbuffers_builder_t *B, BluefiReply_table_t t);
__flatbuffers_build_table(flatbuffers_, BluefiReply, 1)

#define __WifiCredentials_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1
#define __WifiCredentials_call_args , v0, v1
static inline WifiCredentials_ref_t WifiCredentials_create(flatbuffers_builder_t *B __WifiCredentials_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, WifiCredentials, WifiCredentials_file_identifier, WifiCredentials_type_identifier)

#define __BluefiCommand_formal_args , WifiCredentials_ref_t v0, int32_t v1
#define __BluefiCommand_call_args , v0, v1
static inline BluefiCommand_ref_t BluefiCommand_create(flatbuffers_builder_t *B __BluefiCommand_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, BluefiCommand, BluefiCommand_file_identifier, BluefiCommand_type_identifier)

#define __BluefiReply_formal_args , WifiCredentials_vec_ref_t v0
#define __BluefiReply_call_args , v0
static inline BluefiReply_ref_t BluefiReply_create(flatbuffers_builder_t *B __BluefiReply_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, BluefiReply, BluefiReply_file_identifier, BluefiReply_type_identifier)

__flatbuffers_build_string_field(0, flatbuffers_, WifiCredentials_ssid, WifiCredentials)
__flatbuffers_build_string_field(1, flatbuffers_, WifiCredentials_password, WifiCredentials)

static inline WifiCredentials_ref_t WifiCredentials_create(flatbuffers_builder_t *B __WifiCredentials_formal_args)
{
    if (WifiCredentials_start(B)
        || WifiCredentials_ssid_add(B, v0)
        || WifiCredentials_password_add(B, v1)) {
        return 0;
    }
    return WifiCredentials_end(B);
}

static WifiCredentials_ref_t WifiCredentials_clone(flatbuffers_builder_t *B, WifiCredentials_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (WifiCredentials_start(B)
        || WifiCredentials_ssid_pick(B, t)
        || WifiCredentials_password_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, WifiCredentials_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, BluefiCommand_wifiCredential, WifiCredentials, BluefiCommand)
__flatbuffers_build_scalar_field(1, flatbuffers_, BluefiCommand_doScan, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), BluefiCommand)

static inline BluefiCommand_ref_t BluefiCommand_create(flatbuffers_builder_t *B __BluefiCommand_formal_args)
{
    if (BluefiCommand_start(B)
        || BluefiCommand_wifiCredential_add(B, v0)
        || BluefiCommand_doScan_add(B, v1)) {
        return 0;
    }
    return BluefiCommand_end(B);
}

static BluefiCommand_ref_t BluefiCommand_clone(flatbuffers_builder_t *B, BluefiCommand_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (BluefiCommand_start(B)
        || BluefiCommand_wifiCredential_pick(B, t)
        || BluefiCommand_doScan_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, BluefiCommand_end(B));
}

__flatbuffers_build_table_vector_field(0, flatbuffers_, BluefiReply_wifiCredentials, WifiCredentials, BluefiReply)

static inline BluefiReply_ref_t BluefiReply_create(flatbuffers_builder_t *B __BluefiReply_formal_args)
{
    if (BluefiReply_start(B)
        || BluefiReply_wifiCredentials_add(B, v0)) {
        return 0;
    }
    return BluefiReply_end(B);
}

static BluefiReply_ref_t BluefiReply_clone(flatbuffers_builder_t *B, BluefiReply_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (BluefiReply_start(B)
        || BluefiReply_wifiCredentials_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, BluefiReply_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BLUEFI_BUILDER_H */
