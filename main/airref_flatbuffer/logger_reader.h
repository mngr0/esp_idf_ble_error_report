#ifndef LOGGER_READER_H
#define LOGGER_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct LoggerCommand_table *LoggerCommand_table_t;
typedef struct LoggerCommand_table *LoggerCommand_mutable_table_t;
typedef const flatbuffers_uoffset_t *LoggerCommand_vec_t;
typedef flatbuffers_uoffset_t *LoggerCommand_mutable_vec_t;
typedef const struct LoggerReply_table *LoggerReply_table_t;
typedef struct LoggerReply_table *LoggerReply_mutable_table_t;
typedef const flatbuffers_uoffset_t *LoggerReply_vec_t;
typedef flatbuffers_uoffset_t *LoggerReply_mutable_vec_t;
#ifndef LoggerCommand_file_identifier
#define LoggerCommand_file_identifier 0
#endif
/* deprecated, use LoggerCommand_file_identifier */
#ifndef LoggerCommand_identifier
#define LoggerCommand_identifier 0
#endif
#define LoggerCommand_type_hash ((flatbuffers_thash_t)0xbc4244c2)
#define LoggerCommand_type_identifier "\xc2\x44\x42\xbc"
#ifndef LoggerCommand_file_extension
#define LoggerCommand_file_extension "bin"
#endif
#ifndef LoggerReply_file_identifier
#define LoggerReply_file_identifier 0
#endif
/* deprecated, use LoggerReply_file_identifier */
#ifndef LoggerReply_identifier
#define LoggerReply_identifier 0
#endif
#define LoggerReply_type_hash ((flatbuffers_thash_t)0x137e24d7)
#define LoggerReply_type_identifier "\xd7\x24\x7e\x13"
#ifndef LoggerReply_file_extension
#define LoggerReply_file_extension "bin"
#endif

typedef int32_t LoggerCommandType_enum_t;
__flatbuffers_define_integer_type(LoggerCommandType, LoggerCommandType_enum_t, 32)
#define LoggerCommandType_list_files ((LoggerCommandType_enum_t)INT32_C(0))
#define LoggerCommandType_delete_file ((LoggerCommandType_enum_t)INT32_C(1))
#define LoggerCommandType_download_file ((LoggerCommandType_enum_t)INT32_C(2))

static inline const char *LoggerCommandType_name(LoggerCommandType_enum_t value)
{
    switch (value) {
    case LoggerCommandType_list_files: return "list_files";
    case LoggerCommandType_delete_file: return "delete_file";
    case LoggerCommandType_download_file: return "download_file";
    default: return "";
    }
}

static inline int LoggerCommandType_is_known_value(LoggerCommandType_enum_t value)
{
    switch (value) {
    case LoggerCommandType_list_files: return 1;
    case LoggerCommandType_delete_file: return 1;
    case LoggerCommandType_download_file: return 1;
    default: return 0;
    }
}



struct LoggerCommand_table { uint8_t unused__; };

static inline size_t LoggerCommand_vec_len(LoggerCommand_vec_t vec)
__flatbuffers_vec_len(vec)
static inline LoggerCommand_table_t LoggerCommand_vec_at(LoggerCommand_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(LoggerCommand_table_t, vec, i, 0)
__flatbuffers_table_as_root(LoggerCommand)

__flatbuffers_define_scalar_field(0, LoggerCommand, loggerCommandType, LoggerCommandType, LoggerCommandType_enum_t, INT32_C(0))
__flatbuffers_define_string_field(1, LoggerCommand, parameter, 0)

struct LoggerReply_table { uint8_t unused__; };

static inline size_t LoggerReply_vec_len(LoggerReply_vec_t vec)
__flatbuffers_vec_len(vec)
static inline LoggerReply_table_t LoggerReply_vec_at(LoggerReply_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(LoggerReply_table_t, vec, i, 0)
__flatbuffers_table_as_root(LoggerReply)

__flatbuffers_define_vector_field(0, LoggerReply, fileList, flatbuffers_string_vec_t, 0)
__flatbuffers_define_string_field(1, LoggerReply, fileContent, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* LOGGER_READER_H */
